# Generated by Django 3.1.4 on 2021-04-24 04:04

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shopping_mall.models.store


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShoppingMallUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('customer', '고객'), ('store_owner', '사장님')], default='customer', help_text='회원 유형', max_length=16)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'shopping_mall_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField(default=0)),
                ('address', models.CharField(help_text='주문 배송지', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='StoreInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_time', models.TimeField(default=datetime.time(0, 0), help_text='가게 개장시간')),
                ('close_time', models.TimeField(default=datetime.time(0, 0), help_text='가게 마감시간')),
                ('is_always_open', models.BooleanField(default=False, help_text='24시간 운영여부')),
                ('food_nutrition_facts', models.JSONField(default={'식재료이름': '영양성분'}, help_text="식재료별 영양정보 ex: {'식재료이름':'영양성분'}")),
                ('company_number', models.CharField(blank=True, help_text='사업자 번호', max_length=16, validators=[django.core.validators.RegexValidator(message='잘못된 사업자 번호 형식입니다. xxx-xx-xxxxx 형식을 지켜주세요.', regex='^([0-9]{3})-?([0-9]{2})-?([0-9]{5})$')])),
            ],
            options={
                'db_table': 'store_info',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='ff222f', help_text='음식점 가게명', max_length=128)),
                ('name2222', models.CharField(default='fff', help_text='음식점 가게명', max_length=128)),
                ('tel_num', models.CharField(default='070-000-0000', help_text='음식점 연락처', max_length=16)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('store_info', models.OneToOneField(null=True, on_delete=models.SET(shopping_mall.models.store.set_deleted_owner), to='shopping_mall.storeinfo')),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='상품명', max_length=128)),
                ('price', models.IntegerField(help_text='상품 가격')),
                ('store', models.ForeignKey(help_text='이 상품을 판매하는 가게', on_delete=django.db.models.deletion.CASCADE, to='shopping_mall.store')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=1, help_text='주문한 해당 메뉴의 갯수')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopping_mall.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopping_mall.product')),
            ],
            options={
                'db_table': 'ordered_product',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='product_set',
            field=models.ManyToManyField(through='shopping_mall.OrderedProduct', to='shopping_mall.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopping_mall.store'),
        ),
    ]
